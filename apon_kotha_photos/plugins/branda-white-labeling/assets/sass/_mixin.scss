$gray_3: #333;
$gray_6: #666;
$gray_8: #888;
$gray_a: #aaa;
$gray_d: #ddd;
$gray_e6: #e6e6e6;
$gray_fa: #fafafa;
$gray_f8: #f8f8f8;

/* debug */
/* $gray_3: yellow; */
/* $gray_6: green; */
/* $gray_8: blue; */
/* $gray_d: lime; */
/* $gray_e6: red; */
/* $gray_fa: blue; */

$white: #fff;
$black: #000000;

$blue_1: #17a8e3;

@mixin border-radius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
}

@mixin box-shadow($left, $top, $radius, $color) {
    box-shadow: $left $top $radius $color;
    -webkit-box-shadow: $left $top $radius $color;
    -moz-box-shadow: $left $top $radius $color;
}

@mixin random_border_color() {
    border: 1px solid rgb(random(255),random(255),random(255));
}

@mixin branda_in_common( $branda ) {
    background-image: url(../../assets/images/branda/#{$branda}.png);
}

@mixin branda_in_module( $branda ) {
    background-image: url(../../../../../../assets/images/branda/#{$branda}.png);
}

@mixin branda_tab_with_subtabs() {
    .sui-box-body {
        padding-top: 0;
        div {
            &[data-tabs] {
                border-top: 0;
            }
        }
    }
}

@mixin sui_12() {
    color: $gray_a;
    font: {
        size: 12px;
        weight: bold;
    }
    margin-bottom: 0;
}

@mixin sui_13() {
    color: $gray_6;
    font: {
        size: 13px;
    }
}

@mixin sui_15() {
    color: $gray_3;
    font: {
        size: 15px;
        weight: 500;
    }
}

@mixin sui_label_15() {
    label {
        &.sui-label {
            @include sui_15;
        }
    }
}

@mixin mask_image( $image ) {
    -webkit-mask-image: url(../images/#{$image}.svg);
    mask-image: url(../images/#{$image}.svg);
}

@mixin background( $image ) {
    background: transparent url(../images/#{$image}.svg) no-repeat 50% 50%;
}


@mixin branda_reset_branding( $padding: 15 ) {
    background-image: none;
    padding-top: #{$padding}px;
}

@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@mixin high_contrast {
	$full-selector: '' + &;
	$high-contrast: str-replace($full-selector, '.sui-wrap.', '.sui-wrap.sui-color-accessible.');

	@at-root #{$high-contrast} {
		@content;
	}
}
